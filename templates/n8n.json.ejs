{
  "name": "<%= scenario_id %> – <%= agent_name %> (Demo)",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [-1400, -20],
      "name": "Manual Trigger"
    },

    {
      "parameters": {
        "functionCode": "// Global config you can edit inside n8n after import\nreturn [{ json: {\n  demoMode: true,                 // true = simulate, false = actually send\n  channel: \"email\",               // \"email\" | \"sms\" | \"whatsapp\" | \"call\"\n  // safety allowlists\n  allowedRecipients: [\"kevanm.spain@gmail.com\"],\n  allowedPhones: [\"+34XXXXXXXXX\"],\n  // default demo destinations\n  overrideTo: \"kevanm.spain@gmail.com\",\n  overrideToPhone: \"+34XXXXXXXXX\",\n  // Twilio FROMs (fill yours and enable nodes you want)\n  twilioFromSms: \"+13412184164\",\n  twilioFromWhatsApp: \"whatsapp:+14155238886\",\n  twilioFromVoice: \"+13412184164\"\n}}];"
      },
      "type": "n8n-nodes-base.function",
      "typeVersion": 2,
      "position": [-1180, -20],
      "name": "Set Config"
    },

    {
      "parameters": {
        "functionCode": "// Minimal demo data using your scenario\nreturn [{ json: {\n  scenario_id: \"<%= scenario_id %>\",\n  scenario_name: \"<%= name %>\",\n  agent_name: \"<%= agent_name %>\",\n  best_reply_shapes: <%- JSON.stringify(best_reply_shapes || []) %>,\n  appointments: [\n    { id: \"A1001\", first:\"Sara\", last:\"L.\", email:\"sara@example.com\", phone:\"+15551234567\", time:\"2025-10-02T10:00\", doctor:\"Dr. Lee\" }\n  ]\n}}];"
      },
      "type": "n8n-nodes-base.function",
      "typeVersion": 2,
      "position": [-940, -20],
      "name": "Load Appointments"
    },

    {
      "parameters": {
        "functionCode": "const appt = items[0].json.appointments[0];\nconst d = new Date(appt.time);\nconst dateStr = d.toLocaleDateString();\nconst timeStr = d.toLocaleTimeString([], {hour:'2-digit', minute:'2-digit'});\nconst cfg = $items('Set Config',0,0).json;\nreturn [{ json: {\n  to: cfg.overrideTo || appt.email,\n  toPhone: cfg.overrideToPhone || appt.phone,\n  subject: `Appointment reminder – ${appt.doctor}`,\n  text: `Hi ${appt.first}, your appointment is on ${dateStr} at ${timeStr} with ${appt.doctor}.\\nReply 1 to CONFIRM, 2 to RESCHEDULE, 3 to CANCEL.`,\n  tts: `Hello ${appt.first}. This is a reminder for your appointment on ${dateStr} at ${timeStr} with ${appt.doctor}. Press one to confirm, two to reschedule, or three to cancel.`\n}}];"
      },
      "type": "n8n-nodes-base.function",
      "typeVersion": 2,
      "position": [-720, -20],
      "name": "Compose Message"
    },

    {
      "parameters": {
        "conditions": {
          "string": [
            { "value1": "={{$items('Set Config',0,0).json.channel}}", "operation": "equal", "value2": "email" }
          ]
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [-520, -160],
      "name": "Channel = Email?"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            { "value1": "={{$items('Set Config',0,0).json.channel}}", "operation": "equal", "value2": "sms" }
          ]
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [-520, -40],
      "name": "Channel = SMS?"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            { "value1": "={{$items('Set Config',0,0).json.channel}}", "operation": "equal", "value2": "whatsapp" }
          ]
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [-520, 80],
      "name": "Channel = WhatsApp?"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            { "value1": "={{$items('Set Config',0,0).json.channel}}", "operation": "equal", "value2": "call" }
          ]
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [-520, 200],
      "name": "Channel = Call?"
    },

    {
      "parameters": { "functionCode": "const cfg = $items('Set Config',0,0).json; const to = $json.to || ''; const ok = (cfg.allowedRecipients||[]).includes(to); return [{ json: { ok } }];" },
      "type": "n8n-nodes-base.function",
      "typeVersion": 2,
      "position": [-340, -240],
      "name": "Email Allowlist"
    },
    {
      "parameters": { "conditions": { "boolean": [ { "value1": "={{$item(0).$node['Email Allowlist'].json.ok}}" } ] } },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [-180, -240],
      "name": "Email Allowed?"
    },
    {
      "parameters": {
        "fromEmail": "",
        "toEmail": "={{$json['to']}}",
        "subject": "={{$json['subject']}}",
        "text": "={{$json['text']}}",
        "options": { "senderName": "<%= agent_name %>" }
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [0, -240],
      "name": "Email Send",
      "notes": "Pick your SMTP credential when demoMode=false"
    },

    {
      "parameters": { "functionCode": "const cfg = $items('Set Config',0,0).json; const phone = $json.toPhone || ''; const ok = (cfg.allowedPhones||[]).includes(phone); return [{ json: { ok } }];" },
      "type": "n8n-nodes-base.function",
      "typeVersion": 2,
      "position": [-340, -40],
      "name": "Phone Allowlist"
    },
    {
      "parameters": { "conditions": { "boolean": [ { "value1": "={{$item(0).$node['Phone Allowlist'].json.ok}}" } ] } },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [-180, -40],
      "name": "Phone Allowed?"
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "send",
        "from": "={{$items('Set Config',0,0).json.twilioFromSms}}",
        "to": "={{$json['toPhone']}}",
        "message": "={{$json['text']}}"
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 2,
      "position": [0, -40],
      "name": "Twilio SMS",
      "disabled": true,
      "credentials": { "twilioApi": { "name": "twilio-default" } }
    },

    {
      "parameters": { "functionCode": "const cfg = $items('Set Config',0,0).json; const phone = $json.toPhone || ''; const ok = (cfg.allowedPhones||[]).includes(phone); return [{ json: { ok } }];" },
      "type": "n8n-nodes-base.function",
      "typeVersion": 2,
      "position": [-340, 80],
      "name": "WA Allowlist"
    },
    {
      "parameters": { "conditions": { "boolean": [ { "value1": "={{$item(0).$node['WA Allowlist'].json.ok}}" } ] } },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [-180, 80],
      "name": "WA Allowed?"
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "send",
        "from": "={{$items('Set Config',0,0).json.twilioFromWhatsApp}}",
        "to": "={{'whatsapp:' + $json['toPhone']}}",
        "message": "={{$json['text']}}"
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 2,
      "position": [0, 80],
      "name": "Twilio WhatsApp",
      "disabled": true,
      "credentials": { "twilioApi": { "name": "twilio-default" } }
    },

    {
      "parameters": { "functionCode": "const cfg = $items('Set Config',0,0).json; const phone = $json.toPhone || ''; const ok = (cfg.allowedPhones||[]).includes(phone); return [{ json: { ok } }];" },
      "type": "n8n-nodes-base.function",
      "typeVersion": 2,
      "position": [-340, 200],
      "name": "Call Allowlist"
    },
    {
      "parameters": { "conditions": { "boolean": [ { "value1": "={{$item(0).$node['Call Allowlist'].json.ok}}" } ] } },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [-180, 200],
      "name": "Call Allowed?"
    },
    {
      "parameters": {
        "resource": "call",
        "operation": "create",
        "from": "={{$items('Set Config',0,0).json.twilioFromVoice}}",
        "to": "={{$json['toPhone']}}",
        "text": "={{$json['tts']}}",
        "sayOrPlay": "say"
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 2,
      "position": [0, 200],
      "name": "Twilio Call (TTS)",
      "disabled": true,
      "credentials": { "twilioApi": { "name": "twilio-default" } }
    },

    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [260, -20],
      "name": "Wait for Reply",
      "notes": "Click Resume to simulate a reply."
    },

    {
      "parameters": {
        "functionCode": "// Parse reply (simulated). Change 'replyText' for testing.\nconst replyText = \"1\"; // 1=CONFIRM, 2=RESCHEDULE, 3=CANCEL, 'late' => LATE\nlet intent = 'HUMAN';\nconst t = (replyText||'').toLowerCase();\nif (t === '1' || /(^|\\b)yes\\b|confirm/.test(t)) intent='CONFIRM';\nelse if (t === '3' || /cancel/.test(t)) intent='CANCEL';\nelse if (t === '2' || /reschedule|another|next week/.test(t)) intent='RESCHEDULE';\nelse if (/late|retard|en retard/.test(t)) intent='LATE';\nreturn [{ json:{ intent } }];"
      },
      "type": "n8n-nodes-base.function",
      "typeVersion": 2,
      "position": [520, -20],
      "name": "Parse Intent (Demo)"
    },

    {
      "parameters": {
        "functionCode": "const intent = $json.intent; console.log('[PMS] Update →', intent); return [{ json: { ok:true, intent } }];"
      },
      "type": "n8n-nodes-base.function",
      "typeVersion": 2,
      "position": [760, -20],
      "name": "Update PMS (Mock)"
    },

    {
      "parameters": {
        "functionCode": "if ($json.intent==='CANCEL' || $json.intent==='RESCHEDULE') { const next={first:'Lena',email:'lena@example.com',phone:'+15550001111'}; console.log('[WAITLIST] Fill', next); return [{ json:{ filledWith:next, intent:$json.intent } }]; } return [{ json:{ skipped:true, intent:$json.intent } }];"
      },
      "type": "n8n-nodes-base.function",
      "typeVersion": 2,
      "position": [1000, -20],
      "name": "Fill Slot (Mock)"
    }
  ],
  "connections": {
    "Manual Trigger": { "main": [[{ "node": "Set Config", "type": "main", "index": 0 }]] },
    "Set Config": { "main": [[{ "node": "Load Appointments", "type": "main", "index": 0 }]] },
    "Load Appointments": { "main": [[{ "node": "Compose Message", "type": "main", "index": 0 }]] },

    "Compose Message": {
      "main": [
        [{ "node": "Channel = Email?",   "type": "main", "index": 0 }],
        [{ "node": "Channel = SMS?",     "type": "main", "index": 0 }],
        [{ "node": "Channel = WhatsApp?","type": "main", "index": 0 }],
        [{ "node": "Channel = Call?",    "type": "main", "index": 0 }]
      ]
    },

    "Channel = Email?":   { "main": [[{ "node": "Email Allowlist", "type": "main", "index": 0 }], []] },
    "Channel = SMS?":     { "main": [[{ "node": "Phone Allowlist", "type": "main", "index": 0 }], []] },
    "Channel = WhatsApp?":{ "main": [[{ "node": "WA Allowlist",    "type": "main", "index": 0 }], []] },
    "Channel = Call?":    { "main": [[{ "node": "Call Allowlist",  "type": "main", "index": 0 }], []] },

    "Email Allowlist": { "main": [[{ "node": "Email Allowed?", "type": "main", "index": 0 }]] },
    "Email Allowed?":  { "main": [[{ "node": "Email Send",    "type": "main", "index": 0 }], [{ "node": "Wait for Reply", "type": "main", "index": 0 }]] },

    "Phone Allowlist": { "main": [[{ "node": "Phone Allowed?", "type": "main", "index": 0 }]] },
    "Phone Allowed?":  { "main": [[{ "node": "Twilio SMS",    "type": "main", "index": 0 }], [{ "node": "Wait for Reply", "type": "main", "index": 0 }]] },

    "WA Allowlist": { "main": [[{ "node": "WA Allowed?", "type": "main", "index": 0 }]] },
    "WA Allowed?":  { "main": [[{ "node": "Twilio WhatsApp", "type": "main", "index": 0 }], [{ "node": "Wait for Reply", "type": "main", "index": 0 }]] },

    "Call Allowlist": { "main": [[{ "node": "Call Allowed?", "type": "main", "index": 0 }]] },
    "Call Allowed?":  { "main": [[{ "node": "Twilio Call (TTS)", "type": "main", "index": 0 }], [{ "node": "Wait for Reply", "type": "main", "index": 0 }]] },

    "Email Send":       { "main": [[{ "node": "Wait for Reply", "type": "main", "index": 0 }]] },
    "Twilio SMS":       { "main": [[{ "node": "Wait for Reply", "type": "main", "index": 0 }]] },
    "Twilio WhatsApp":  { "main": [[{ "node": "Wait for Reply", "type": "main", "index": 0 }]] },
    "Twilio Call (TTS)":{"main": [[{ "node": "Wait for Reply", "type": "main", "index": 0 }]] },

    "Wait for Reply":     { "main": [[{ "node": "Parse Intent (Demo)", "type": "main", "index": 0 }]] },
    "Parse Intent (Demo)":{"main": [[{ "node": "Update PMS (Mock)",    "type": "main", "index": 0 }]] },
    "Update PMS (Mock)":  { "main": [[{ "node": "Fill Slot (Mock)",    "type": "main", "index": 0 }]] }
  },
  "active": false,
  "settings": {},
  "staticData": null,
  "pinData": {}
}
